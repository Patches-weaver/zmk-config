/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

//#include "includes/settings.dtsi"
#include "includes/behaviours_homerow_mods.dtsi"
#include "../zmk-nodefree-config/helper.h"
#include "../../zmk-nodefree-config/keypos_def/keypos_30keys_hummingbird.h"

// Mabroum
// #include <behaviors.dtsi>
// #include <dt-bindings/zmk/keys.h>
// #include <dt-bindings/zmk/bt.h>
// #include <dt-bindings/zmk/outputs.h>

// InfusedKim includes (Brian to check out commented-out files)
// #include "includes/custom_keycodes.dtsi"
// #include "includes/settings_pd.dtsi"
// #include "includes/conditional_layers.dtsi"
// #include "includes/macros.dtsi"
// #include "includes/combos.dtsi"
// #include "includes/behaviours_mod_morph.dtsi"
// #include "includes/behaviours_other.dtsi"

#define DEF_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3
#define OTH_L 4

/*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │     20  21  22     │ │     23  24  25     │
  ╰───────────╮ 26  27 │ │ 28  29 ╭───────────╯
              ╰────────╯ ╰────────╯            */

/* left-hand HRMs */
ZMK_BEHAVIOR(hml, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/* right-hand HRMs */
ZMK_BEHAVIOR(hmr, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            //  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                    &kp C         &kp B         &kp H       &kp G         &kp K             &kp COMMA     &kp DOT       &kp SQT       &kp J         &kp K
                    &hm LGUI P    &hm LALT S    &hm LCTRL N &hm LSHFT F   &kp G             &kp DOT       &kp A         &kp E         &kp I         &kp W
                    &kp C         &kp L         &kp D                                                     &kp U         &kp O         &kp Y
            //  ╰─────────────┴─────────────┼─────────────┤                                             ├─────────────┼─────────────┴─────────────╯
                                                            &kp SPACE    &kp SPACE          &kp SPACE   &kp SPACE
            //                                            ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯                                                            
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
            //  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                    &trans      &trans          &trans       &trans         &trans           &trans        &kp HOME      &kp UARW      &kp PG_UP     &trans
                    &trans      &trans          &trans       &trans         &trans           &trans        &kp LARW      &kp DARW      &kp RARW      &trans
                                &trans          &trans       &trans                                        &kp END       &trans        &kp PG_DN
            //  ╰─────────────┴─────────────┼─────────────┤                                             ├─────────────┼─────────────┴─────────────╯
                                                             &trans         &trans           &kp ESC       &kp DEL
            //                                            ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯   
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &kp LBKT   &kp N7     &kp N8      &kp N9          &kp RBKT      &trans          &trans         &trans      &trans     &trans
                &kp SEMI   &kp N4     &kp N5      &kp N6          &kp EQUAL     &trans          &trans         &trans      &trans     &trans
                           &kp N1     &kp N2      &kp N3                                        &trans         &trans      &trans
                                                  &kp N0          &kp MINUS     &trans          &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &kp LBRC     &kp LS(N7)  &kp LS(N8)  &kp LS(N9) &kp RBRC       &trans &trans   &trans    &trans    &trans
                &kp COLON     &kp LS(N4)  &kp LS(N5)  &kp LS(N6) &kp PLUS       &trans &trans   &trans    &trans    &trans
                              &kp LS(N1)  &kp LS(N2)  &kp LS(N3)                           &trans   &trans    &trans
                                                   &kp LS(N0) &kp UNDER   &trans &trans
            >;
        };

	/*
        other_layer {
            label = "Other";
            bindings = <
                &bt BT_CLR &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &bt BT_SEL 0     &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                                                  &trans          &trans       &trans           &trans
            >;
        };
	*/

    };
};
